Some useful git scripts to make easier some daily operations.

Note that they are dependent of:

- The naming schema used for moodle branches (MOODLE_XX_STABLE)
- My naming schema used for feature branches (_21, _22...)

But surely they can be easily hacked to suit your needs.

To install them:

- clone/download the repository.
- add it to your $PATH.
- create git aliases for them if you're really lazy or
  you aren't using autocompletion.

Then you'll be able to run:

- git currentbranch: returns the current branch.
- git currentcommit: returns the current commit (in specified branch, default to current).
- git oldest-ancestor: returns the oldest common ancestor
      (branch point) of two given branches.
- git package: given a commit/tag/branch, one format
      (zip, tar, tgz), one target directory and one prefix
      generate one package containing that exact version
      from any git repository. When a prefix is defined,
      support for both including and excluding files is
      enabled if prefix.includes or prefix.excludes files
      are present in the git dir. Also, you can use one
      prefix.executes file to perform any other customization
      before proceeding with packaging. See git-package-moodle-prefix
      for a working example prefix). Examples:
        - git package
        - git package v2.2.3 --format=tgz --prefix=moodle
        - git package MOODLE_22_STABLE --dir=/some/dir --prefix=moodle
        - git package v2.1.0 -f tar -d /some/dir -p moodle
        - git package 53cd3c286e8ac0b368fa6becb113945f292891cc
        - git package v2.4.0-rc1 --branch MOODLE_24_STABLE
        - git package v2.5-beta --ignoretags

- git pullall: pulls all the upstream branches.
- git mrproper: detects all the feature branches already
      merged/picked upstream, suggesting the git command
      to execute in order to get rid of them. Note that
      some ff merges can lead to undetected changes so
      it only will be working 100% reliable if no ff merges
      are performed.
- git resetall: resets all local branches to the status of upstream ones.

And that's all. Enjoy them!

© various scripts, pages, examples out there I've used to build them.
© 2012 and upwards, the code, Eloy Lafuente (stronk7).
© 2012 and upwards, the "mrproper" name, David Mudrák.

20121203 - Added git-currentcommit and git-package
20121220 - Added --branch and prefix.excludes support to git-package

License: Whatever you need, being OSI. BSD New (3-Clause) by default.
